{"version":3,"sources":["src/Cover/index.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["class Cover {\r\n    state = {};\r\n    constructor (data) {\r\n        this.setState(data);\r\n        const { ctx, image, left, top, position, degrees, size, scale } = data;\r\n        // ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        let width = size?.width || image.width;\r\n        let height = size?.height || image.height;\r\n        const _left = left || position?.x || 0;\r\n        const _top = top || position?.y || 0;\r\n        if (scale) {\r\n            width = width * scale;\r\n            height = height * scale;\r\n        }\r\n\r\n        if (typeof degrees === 'number') {\r\n            ctx.save();\r\n            ctx.translate(_left + width / 2, _top + height / 2);\r\n            ctx.rotate(degrees * Math.PI / 180);\r\n            ctx.drawImage(image, -width / 2, -height / 2, width, height);\r\n            ctx.restore();\r\n        } else {\r\n            ctx.drawImage(image, _left, _top, width, height);\r\n        }\r\n    }\r\n\r\n    setState({ ctx, image, left, top, position, degrees, width, height, size, scale }) {\r\n        // console.log('==== pong', this.state);\r\n\r\n        let _width = width || size?.width || this.state.width || image.width;\r\n        let _height = height || size?.height || this.state.height || image.height;\r\n        if (typeof scale === 'number') {\r\n            _width = image.width * scale;\r\n            _height = image.height * scale;\r\n        }\r\n        const _left = (typeof left === 'number' && left) || (typeof position?.x === 'number' && position.x) || 0;\r\n        const _top = (typeof top === 'number' && top) || (typeof position?.y === 'number' && position.y) || 0;\r\n\r\n        this.state = {\r\n            ctx: ctx || this.state.ctx,\r\n            image: image || this.state.image,\r\n            left: _left,\r\n            top: _top,\r\n            degrees: typeof degrees === 'number' ? degrees : this.state.degrees,\r\n            width: _width,\r\n            height: height,\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cover;\r\n","import Cover from './Cover';\r\n\r\nconst loadImage = src => new Promise(resolve => {\r\n    const image = new Image();\r\n    image.src = src;\r\n    image.onload = e => {\r\n        resolve(e.path[0]);\r\n    };\r\n});\r\nconst render = (callback, start?) => {\r\n    if (!start) {\r\n        start = Date.now();\r\n    }\r\n    if (callback(Date.now() - start)) {\r\n        requestAnimationFrame(() => render(callback, start));\r\n    }\r\n}\r\nconst initCanvas = async () => {\r\n    const w = document.body.offsetWidth, h = document.body.offsetHeight;\r\n    const canvas = document.querySelector('canvas');\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const images = await Promise.all([\r\n        '/assets/1.PNG',\r\n        '/assets/2.PNG',\r\n        '/assets/3.PNG',\r\n        '/assets/4.png',\r\n        '/assets/5.PNG',\r\n        '/assets/6.PNG',\r\n        '/assets/7.PNG',\r\n        '/assets/8.PNG',\r\n        '/assets/9.PNG',\r\n        '/assets/10.PNG',\r\n    ].map(loadImage));\r\n\r\n    // const { width, height } = img;\r\n    // ctx.drawImage(img, 100, 100, width / 2, height / 2);\r\n\r\n    // let img = images[7];\r\n    for (const img of images) {\r\n        const x = Math.floor(Math.random() * w); \r\n        const y = Math.floor(Math.random() * h); \r\n        const degrees = Math.floor(Math.random() * 360);\r\n\r\n        new Cover({\r\n            ctx,\r\n            image: img,\r\n            position: { x, y },\r\n            scale: 0.25,\r\n            degrees\r\n        });\r\n\r\n        new Cover({\r\n            ctx,\r\n            image: img,\r\n            position: { x: x - w, y },\r\n            scale: 0.25,\r\n            degrees\r\n        });\r\n\r\n        new Cover({\r\n            ctx,\r\n            image: img,\r\n            position: { x, y: y - h },\r\n            scale: 0.25,\r\n            degrees\r\n        });\r\n\r\n    }\r\n    let i = 0;\r\n    render(t => {\r\n        console.log('====', ++i, t);\r\n        return t < 100;\r\n    });\r\n};\r\nconst main = () => {\r\n    initCanvas();\r\n};\r\n\r\ndocument.addEventListener('DOMContentLoaded', main);\r\n"]}