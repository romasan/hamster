{"version":3,"sources":["src/helpers.ts","src/animatedLink.ts","src/index.ts"],"names":[],"mappings":";AAqBa,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,QAAA,KAAA,QAAA,YAAA,EArBN,IAAM,EAAS,SAAC,EAAU,EAAQ,GAClC,IACH,EAAQ,KAAK,OAEV,IACH,EAAQ,GAEN,EAAS,KAAK,MAAQ,IAAS,IACjC,sBAAsB,WAAM,OAAA,EAAA,QAAA,QAAO,EAAU,EAAO,MAR3C,QAAA,OAAM,EAYZ,IAAM,EAAO,SAAC,EAAQ,GAC3B,OAAA,EAAK,OACH,SAAC,EAAK,GAOG,IAAA,EAPK,OAAA,EAAA,EAAA,GACT,KAAG,EAAA,IACL,GAAM,EAAO,GAAI,KAEpB,KANS,QAAA,KAAI,EASV,IAAM,EAAU,SAAC,GAAa,OAAA,IAAI,KAAK,KAAK,MAAQ,GAAU,iBAAmB,MAA3E,QAAA,QAAO;;ACjBP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAJb,IAAA,EAAA,QAAA,aAEM,EAAO,GAEA,EAAe,SAAC,EAAM,GACjC,IAAM,EAAS,SAAS,cAAc,WAChC,EAAQ,EAAK,iBAAiB,GAC9B,EAAK,SAAS,cAAc,OAClC,EAAO,YAAY,GACf,IACF,SAAS,SAAW,EAAK,MAE3B,EAAG,UAAU,IAAI,EAAS,oBAAsB,cAChD,WAAW,WACT,EAAG,UACF,KACH,OAAO,SAAQ,EAAA,EAAA,MAAK,EAAO,CAAC,OAAQ,MAAO,QAAS,YAAY,QAC9D,SAAC,GAAC,IAAA,EAAG,EAAA,GAAE,EAAK,EAAA,GAAM,OAAC,EAAG,MAAM,GAAO,GAAA,OAAG,KAAK,KAAK,OAAO,IAAO,QAEhE,IAAM,EAAU,CAAC,OAAO,OAAQ,OAAO,OACjC,EAAS,KAAK,IAAG,MAAR,KAAY,GACrB,EAAY,EACZ,EAAQ,KAAK,KAAK,EAAS,GAE3B,EAAQ,EAAG,MAAM,MACjB,EAAS,EAAG,MAAM,OAEpB,EAAO,EACP,EAAO,EACP,EAAU,GAEd,EAAA,EAAA,QAAO,SAAC,EAAM,GACC,IAAT,IACF,EAAO,IAET,GAAW,EAAO,GAZN,IAcV,EAAU,EACV,GAAQ,GAEV,IAAM,EAAU,EAAO,EAIvB,OAHA,EAAG,MAAM,UAAY,cAAA,OAAc,EAAO,SAAA,OAAQ,EAAO,OACzD,EAAG,MAAM,MAAQ,GAAA,OAAG,SAAS,GAAmB,EAAV,EAAW,MACjD,EAAG,MAAM,OAAS,GAAA,OAAG,SAAS,GAAoB,EAAV,EAAW,QAC/C,GAAQ,EAAQ,KACb,IACH,EAAA,QAAA,cAAa,GAAM,IAEd,MA5CA,QAAA,aAAY;;AC8JzB,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAlKA,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,kBAGM,EAAoB,CACxB,CACE,KAAM,eACN,SAAU,KACV,KAAI,WACF,MAAO,CACL,QAAS,QACT,MAAO,MAGX,OAAM,SAAC,EAAQ,EAAQ,GACrB,IAAM,EAAQ,SAAS,OAAS,EAAQ,UAAY,EAAQ,MAAS,EAAQ,QAAQ,OAAU,EAAQ,QACvG,EAAQ,UAAY,EAAQ,QAAQ,IAEtC,OAAM,SAAC,EAAQ,EAAS,GACtB,EAAQ,UAAY,KAGxB,CACE,KAAM,YACN,SAAU,IACV,KAAI,WACF,IAAM,GAAM,EAAA,EAAA,SAAQ,IAAI,KAAK,eAE7B,MAAO,CACL,KAFW,gCAAA,OAAgC,EAAG,yBAG9C,MAAO,MAGX,OAAM,SAAC,EAAQ,EAAQ,GACrB,IAAM,EAAQ,SAAS,OAAS,EAAQ,UAAY,EAAQ,MAAS,EAAK,EAAQ,QAC5E,EAAO,EAAQ,KAAK,MAAM,EAAI,EAAQ,KAAK,OAAS,IAAO,EAAQ,SACzE,EAAQ,UAAY,mDAAA,OAEd,EAAI,yCAAA,OAAwC,EAAQ,OAAS,QAAO,sCAI5E,OAAM,SAAC,EAAQ,GACb,EAAQ,UAAY,EAAQ,OAGhC,CACE,KAAM,QACN,SAAU,KAEZ,CACE,KAAM,YACN,SAAU,IACV,KAAI,SAAC,EAAQ,GACX,IAAM,EAAO,CACX,CACE,KAAM,aACN,MAAO,eAET,CACE,KAAM,iCACN,MAAO,UAET,CACE,KAAM,0CACN,MAAO,aAIL,EAAU,8BAAA,OAEV,EACC,IACC,SAAC,EAAM,GAAU,MAAA,0BAAA,OACR,EAAK,KAAI,kBAAA,OAAiB,EAAK,OAAA,OAAM,EAAK,MAAK,uBAGzD,KAAK,KAAI,4BAGV,EAAK,SAAS,cAAc,OAClC,EAAG,UAAY,EACf,IAAM,EAAO,EAAG,UAIhB,OAHA,EAAG,UAAY,GACf,MAAA,GAAA,EAAQ,YAAY,GAEb,CACL,QAAO,EACP,KAAI,EACJ,KAAI,EACJ,MAAO,IACP,OAAQ,IAGZ,OAAM,SAAC,EAAQ,EAAQ,GACrB,IAAM,EAAQ,SAAS,OAAS,EAAQ,UAAY,EAAQ,MAAS,EAAK,EAAQ,QAC5E,EAAO,EAAQ,KAAK,MAAM,EAAI,EAAQ,KAAK,OAAS,IAAO,EAAQ,SACzE,EAAQ,OAAQ,UAAY,mDAAA,OAEtB,EAAI,yCAAA,OAAwC,EAAQ,QAAU,OAAM,sCAI5E,OAAM,SAAC,EAAQ,GACb,EAAQ,OAAQ,UAAY,EAAQ,QACnB,EAAQ,OAAO,iBAAiB,iBACxC,QAAQ,SAAC,GAChB,EAAK,iBAAiB,QAAS,SAAC,GAC9B,EAAM,kBACN,EAAA,EAAA,cAAa,EAAM,eAOvB,EAAO,WACX,IAAI,EAAQ,EACN,EAAO,EAAW,IAAI,SAAC,GAAc,OAAA,EAAA,EAAA,GACtC,GAAS,CACZ,QAAQ,EACR,SAAS,EACT,UAAW,EACX,QAAU,GAAS,EAAU,SAC7B,QAAS,SAGL,EAAS,SAAS,cAAc,YAEtC,EAAA,EAAA,QAAO,SAAC,EAAM,GA0BZ,OAzBA,EAAK,QAAQ,SAAC,EAAM,GAgCxB,IAAA,EAAA,EAAA,EA/BM,GAAI,GAAQ,EAAK,UACf,GAAI,GAAQ,EAAK,QACf,GAAI,EAAK,OAAQ,CACf,IAAM,EAAY,EAAO,EAAK,UACxB,EAAU,GAAa,EAAK,SAAW,KACvC,EAAS,CACb,UAAS,EACT,SAAU,EACV,YAAa,EACb,QAAO,EACP,QAAS,EAAK,QACd,SAAU,EAAK,UAEL,QAAZ,EAAA,MAAA,OAAI,EAAJ,EAAM,cAAM,IAAA,GAAA,EAAA,KAAA,EAAG,EAAQ,EAAQ,EAAK,QAAS,EAAK,WAElD,EAAK,QAAoB,QAAV,EAAA,MAAA,OAAI,EAAJ,EAAM,YAAI,IAAA,OAAA,EAAA,EAAA,KAAA,EAAG,EAAQ,EAAK,KAAM,EAAK,EAAQ,IAC5D,EAAK,QAAS,OAEN,EAAK,UACH,QAAZ,EAAA,MAAA,OAAI,EAAJ,EAAM,cAAM,IAAA,GAAA,EAAA,KAAA,EAAG,EAAQ,EAAK,QAAS,EAAK,MAC1C,EAAK,SAAU,OAIjB,EAAK,EAAK,OAAS,GAAG,QAAU,MAOxC,SAAS,iBAAiB,mBAAoB","file":"src.55a8b82e.js","sourceRoot":"..","sourcesContent":["export const render = (callback, start?, frame?) => {\n  if (!start) {\n    start = Date.now()\n  }\n  if (!frame) {\n    frame = 0\n  }\n  if (callback(Date.now() - start, ++frame)) {\n    requestAnimationFrame(() => render(callback, start, frame))\n  }\n}\n\nexport const pick = (source, keys: string[]) =>\n  keys.reduce(\n    (obj, key) => ({\n      ...obj,\n      [key]: source[key],\n    }),\n    {}\n  )\n\nexport const calcAge = (birthday) => new Date(Date.now() - birthday).getUTCFullYear() - 1970\n","import { render, pick } from './helpers'\n\nconst STEP = 80\n\nexport const animatedLink = (link, gurgle?) => {\n  const canvas = document.querySelector('#canvas') as HTMLElement\n  const rects = link.getClientRects()[0]\n  const el = document.createElement('div')\n  canvas.appendChild(el)\n  if (gurgle) {\n    document.location = link.href\n  }\n  el.classList.add(gurgle ? 'link-cover-second' : 'link-cover')\n  setTimeout(() => {\n    el.remove()\n  }, 2000)\n  Object.entries(pick(rects, ['left', 'top', 'width', 'height'])).forEach(\n    ([key, value]) => (el.style[key] = `${Math.ceil(Number(value))}px`)\n  )\n  const margins = [screen.height, screen.width]\n  const margin = Math.max(...margins)\n  const stepWidth = STEP\n  const steps = Math.ceil(margin / stepWidth)\n  const sleep = 1\n  const width = el.style.width\n  const height = el.style.height\n\n  let step = 0\n  let prev = 0\n  let counter = 0\n\n  render((time, _step) => {\n    if (prev === 0) {\n      prev = time\n    }\n    counter += time - prev\n    if (counter > sleep) {\n      counter = 0\n      step += 1\n    }\n    const padding = step * stepWidth\n    el.style.transform = `translate(-${padding}px, -${padding}px)`\n    el.style.width = `${parseInt(width) + padding * 2}px`\n    el.style.height = `${parseInt(height) + padding * 2}px`\n    if (step >= steps - 1) {\n      if (!gurgle) {\n        animatedLink(link, true)\n      }\n      return false\n    }\n    return true\n  })\n}\n","import { render, calcAge } from './helpers'\nimport { animatedLink } from './animatedLink'\nimport { Ani } from './types'\n\nconst animations: Ani[] = [\n  {\n    name: 'fake preload',\n    duration: 1500,\n    init() {\n      return {\n        pattern: '/â€”\\\\|',\n        sleep: 500,\n      }\n    },\n    render(canvas, cursor, payload) {\n      const index = parseInt(String(((cursor!.msAtStart % payload.sleep) * payload.pattern.length) / payload.sleep))\n      canvas!.innerText = payload.pattern[index]\n    },\n    finish(canvas, payload, name) {\n      canvas!.innerText = ''\n    },\n  },\n  {\n    name: 'type text',\n    duration: 2000,\n    init() {\n      const age = calcAge(new Date('06 05 1990'))\n      const text = `Hello, my name is Roman, I'm ${age} and I'm a programmer`\n      return {\n        text,\n        sleep: 600,\n      }\n    },\n    render(canvas, cursor, payload) {\n      const index = parseInt(String(((cursor!.msAtStart % payload.sleep) * 2) / payload.sleep))\n      const text = payload.text.slice(0, (payload.text.length / 100) * cursor!.percent)\n      canvas!.innerHTML = `\n        <div class=\"cursor-space\">\n          ${text}<span class=\"cursor\" style=\"display: ${index ? 'none' : 'block'}\">|</span>\n        <div>\n      `\n    },\n    finish(canvas, payload) {\n      canvas!.innerText = payload.text\n    },\n  },\n  {\n    name: 'sleep',\n    duration: 500,\n  },\n  {\n    name: 'type menu',\n    duration: 4000,\n    init(canvas, name) {\n      const menu = [\n        {\n          link: '/projects/',\n          label: 'my projects',\n        },\n        {\n          link: 'https://www.github.com/romasan',\n          label: 'github',\n        },\n        {\n          link: 'https://www.linkedin.com/in/roman-bauer',\n          label: 'linkedin',\n        },\n      ]\n\n      const rawHTML = `\n        <div>\n          ${menu\n            .map(\n              (item, index) => `\n            <a href=\"${item.link}\" data-index=\"${index}\">[${item.label}]</a>\n          `\n            )\n            .join(' ')}\n        </div>\n      `\n      const el = document.createElement('div')\n      el.innerHTML = rawHTML\n      const text = el.innerText\n      el.innerText = ''\n      canvas?.appendChild(el)\n\n      return {\n        rawHTML,\n        text,\n        menu,\n        sleep: 600,\n        canvas: el,\n      }\n    },\n    render(canvas, cursor, payload) {\n      const index = parseInt(String(((cursor!.msAtStart % payload.sleep) * 2) / payload.sleep))\n      const text = payload.text.slice(0, (payload.text.length / 100) * cursor!.percent)\n      payload.canvas!.innerHTML = `\n        <div class=\"cursor-space\">\n          ${text}<span class=\"cursor\" style=\"display: ${index ? 'block' : 'none'}\">|</span>\n        <div>\n      `\n    },\n    finish(canvas, payload) {\n      payload.canvas!.innerHTML = payload.rawHTML\n      const elements = payload.canvas.querySelectorAll('a[data-index]')\n      elements.forEach((link) => {\n        link.addEventListener('click', (event) => {\n          event.preventDefault()\n          animatedLink(event.target)\n        })\n      })\n    },\n  },\n]\n\nconst main = () => {\n  let timer = 0\n  const list = animations.map((animation) => ({\n    ...animation,\n    inited: false,\n    cleared: false,\n    startTime: timer,\n    endTime: (timer += animation.duration),\n    payload: null,\n  }))\n\n  const canvas = document.querySelector('#canvas') as HTMLElement\n\n  render((time, frame) => {\n    list.forEach((item, index) => {\n      if (time >= item.startTime) {\n        if (time <= item.endTime) {\n          if (item.inited) {\n            const msAtStart = time - item.startTime\n            const percent = msAtStart / (item.duration / 100)\n            const cursor = {\n              msAtStart,\n              globalMs: time,\n              globalFrame: frame,\n              percent,\n              endTime: item.endTime,\n              duration: item.duration,\n            }\n            item?.render?.(canvas, cursor, item.payload, item.name)\n          } else {\n            item.payload = item?.init?.(canvas, item.name, list[index - 1])\n            item.inited = true\n          }\n        } else if (!item.cleared) {\n          item?.finish?.(canvas, item.payload, item.name)\n          item.cleared = true\n        }\n      }\n    })\n    if (list[list.length - 1].endTime < time) {\n      return false\n    }\n    return true\n  })\n}\n\ndocument.addEventListener('DOMContentLoaded', main)\n"]}