{"version":3,"sources":["pages/test2/service-worker.js"],"names":["self","addEventListener","event","skipWaiting","e","options","body","data","text","icon","vibrate","dateOfArrival","Date","now","primaryKey","actions","action","title","waitUntil","registration","showNotification","eventAction","console","log","url","notification","close","clients","matchAll","type","then","windowClients","i","length","client","focus","openWindow"],"mappings":";AAAAA,KAAKC,iBAAiB,UAAYC,IAChCF,KAAKG,gBAGPH,KAAKC,iBAAiB,OAASG,IAC7B,MAEMC,EAAU,CACdC,KAHWF,EAAEG,KAAKC,QAAU,8BAI5BC,KAAM,uBACNC,QAAS,CAAC,IAAK,GAAI,KACnBH,KAAM,CACJI,cAAeC,KAAKC,MACpBC,WAAY,GAEdC,QAAS,CACP,CACEC,OAAQ,UACRC,MAAO,yBACPR,KAAM,wBAER,CACEO,OAAQ,QACRC,MAAO,2BACPR,KAAM,sBAIZL,EAAEc,UAAUlB,KAAKmB,aAAaC,iBAAiB,uCAAwCf,MAGzFL,KAAKC,iBAAiB,oBAAsBC,IAC1C,MAAMmB,EAAcnB,EAAMc,OAG1B,GAFAM,QAAQC,IAAI,4CAA6CF,MAErC,YAAhBA,EACF,OAGF,MAAMG,EAAM,4DACZtB,EAAMuB,aAAaC,QACnBxB,EAAMgB,UACJS,QAAQC,SAAS,CAAEC,KAAM,WAAYC,KAAMC,IAEzC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAcE,OAAQD,IAAK,CAC7C,IAAIE,EAASH,EAAcC,GAE3B,GAAIE,EAAOV,MAAQA,GAAO,UAAWU,EACnC,OAAOA,EAAOC,QAIlB,GAAIR,QAAQS,WACV,OAAOT,QAAQS,WAAWZ","file":"service-worker.js","sourceRoot":"..","sourcesContent":["self.addEventListener('install', (event) => {\n  self.skipWaiting();\n});\n\nself.addEventListener('push', (e) => {\n  const body = e.data.text() || 'Push message has no payload';\n\n  const options = {\n    body,\n    icon: 'images/checkmark.png',\n    vibrate: [100, 50, 100],\n    data: {\n      dateOfArrival: Date.now(),\n      primaryKey: 1,\n    },\n    actions: [\n      {\n        action: 'explore',\n        title: 'Explore this new world',\n        icon: 'images/checkmark.png',\n      },\n      {\n        action: 'close',\n        title: \"I don't want any of this\",\n        icon: 'images/xmark.png',\n      },\n    ],\n  };\n  e.waitUntil(self.registration.showNotification('Notification via Server and Push API', options));\n});\n\nself.addEventListener('notificationclick', (event) => {\n  const eventAction = event.action;\n  console.log('message event fired! event action is:', `'${eventAction}'`);\n\n  if (eventAction !== 'explore') {\n    return;\n  }\n\n  const url = 'https://developer.mozilla.org/en-US/docs/Web/API/Push_API';\n  event.notification.close(); // Android needs explicit close.\n  event.waitUntil(\n    clients.matchAll({ type: 'window' }).then((windowClients) => {\n      // Check if there is already a window/tab open with the target URL\n      for (var i = 0; i < windowClients.length; i++) {\n        var client = windowClients[i];\n        // If so, just focus it.\n        if (client.url === url && 'focus' in client) {\n          return client.focus();\n        }\n      }\n      // If not, then open the target URL in a new window/tab.\n      if (clients.openWindow) {\n        return clients.openWindow(url);\n      }\n    })\n  );\n});"]}